#!/bin/bash

# List of Pokémon
pokemon_list=(bulbasaur ivysaur venusaur charmander charmeleon)

# Output directory
OUTPUT_DIR="pokemon_data"
mkdir -p "$OUTPUT_DIR"

# Max retries
MAX_RETRIES=3

# Function to fetch data with retries
fetch_pokemon_data() {
    local pokemon=$1
    local attempt=1
    local success=false

    while [ $attempt -le $MAX_RETRIES ]; do
        echo "Fetching data for $pokemon (Attempt $attempt)..."
        API_URL="https://pokeapi.co/api/v2/pokemon/$pokemon"
        OUTPUT_FILE="${OUTPUT_DIR}/${pokemon}.json"

        curl -s -f --max-time 10 "$API_URL" -o "$OUTPUT_FILE"
        if [ $? -eq 0 ]; then
            echo "Saved data to $OUTPUT_FILE ✅"
            success=true
            break
        else
            echo "Attempt $attempt failed for $pokemon ❌"
            sleep 2
        fi
        attempt=$((attempt + 1))
    done

    if [ "$success" = false ]; then
        echo "[$(date)] Failed to fetch data for $pokemon after $MAX_RETRIES attempts" >> errors.txt
    fi
}

# Clear previous error log
> errors.txt

# Launch fetch jobs in parallel
for pokemon in "${pokemon_list[@]}"; do
    fetch_pokemon_data "$pokemon" &
done

# Wait for all background processes to finish
wait

echo -e "\n✅ All Pokémon data fetched (parallel mode)"
